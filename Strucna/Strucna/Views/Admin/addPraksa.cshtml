@using System.Web.Mvc.Html
@using Strucna.Baza_povezivanje
@using Strucna.Models
@using Strucna.ViewModels
@{
   
    ViewBag.Title = "addPraksa";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    strucnapraksa baza = new strucnapraksa();
    var listMentora = new List<SelectListItem>();

    List<Mentor> lista = baza.Mentori.ToList();
 

    foreach (Mentor mentor in lista)
    {
        listMentora.Add(new SelectListItem
        {
            Value = mentor.id_mentor.ToString(),

            Text = mentor.ime_prezime

        });
    }

    var listStudija = new List<SelectListItem>();

    List<Studij> list = baza.Smjerovi.ToList();
 

    foreach (Studij studij in list)
    {
        listStudija.Add(new SelectListItem
        {
            Value = studij.id_studij.ToString(),

            Text = studij.naziv

        });
    }


}

@model Strucna.Models.Praksa
<body class="padTop53 ">
    <!--PAGE CONTENT -->
    <div id="content">
        <div class="inner">
            <div class="row">
                <div class="col-lg-12">


                </div>
            </div>
            <hr />
            <div class="col-lg-3">


           
            <div class="table-responsive">

                @using (Html.BeginForm())
                {

                 <p>
                        @Html.LabelFor(model => model.naziv, new { @class = "control-label" })
                        @Html.EditorFor(model => model.naziv, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.naziv, "", new { @class = "text-danger" })
                 </p>
                    <p>
                        @Html.LabelFor(model => model.id_studij, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.id_studij, listStudija, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.id_studij, "", new { @class = "text-danger" })
                    </p>
                <p>
                    @Html.LabelFor(model => model.id_mentor, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.id_mentor, listMentora, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.id_mentor, "", new { @class = "text-danger" })
                </p>
                    <p>
                        @Html.LabelFor(model => model.datum_od, new { @class = "control-label" })
                        @Html.EditorFor(model => model.datum_od, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.datum_od, "", new { @class = "text-danger" })
                    </p>
                    <p>
                        @Html.LabelFor(model => model.datum_do, new { @class = "control-label" })
                        @Html.EditorFor(model => model.datum_do, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.datum_do, "", new { @class = "text-danger" })
                    </p>

                    <p>
                        @Html.LabelFor(model => model.zavrsena)
                        <br/>
                        @Html.RadioButtonFor(model => model.zavrsena, 0) Ne
                        <br/>
                        @Html.RadioButtonFor(model => model.zavrsena, 1) Da
                    </p>

                    <button class="btn btn-primary">Dodaj</button>
                }
            </div>
            </div>
        </div>
    </div>

</body>

